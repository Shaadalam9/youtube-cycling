---
name: Lint codebase

on:
  push:
  pull_request:
    branches: [main]

# Allow Super-Linter to post individual check statuses (prevents 403s).
permissions:
  contents: read
  pull-requests: read
  statuses: write

jobs:
  lint:
    name: Run Super-Linter
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout (full history helps diff-based runs)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Detect Python version from .python-version (e.g., 3.11.9 → 3.11)
      - name: Detect Python version from .python-version
        id: pyver
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f ".python-version" ]]; then
            PY_FULL="$(tr -d '\n\r' < .python-version)"
            PY_MAJOR_MINOR="$(echo "$PY_FULL" | awk -F. '{print $1 "." $2}')"
          else
            echo "⚠️  .python-version not found. Falling back to 3.11" >&2
            PY_FULL="3.11.0"
            PY_MAJOR_MINOR="3.11"
          fi
          echo "PY_FULL=$PY_FULL"           >> "$GITHUB_ENV"
          echo "PY_MAJOR_MINOR=$PY_MAJOR_MINOR" >> "$GITHUB_ENV"
          echo "Detected Python: $PY_FULL (mypy -> $PY_MAJOR_MINOR)"

      # 3) Generate mypy.ini based on detected version
      - name: Generate mypy.ini dynamically
        shell: bash
        run: |
          set -euo pipefail
          {
            echo "[mypy]"
            echo "python_version = ${PY_MAJOR_MINOR}"
            echo "ignore_missing_imports = true"
          } > mypy.ini
          echo "Generated mypy.ini:"
          cat mypy.ini

      # 4) Run Super-Linter v8 with focused validators
      - name: Lint codebase
        uses: super-linter/super-linter@v8.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Only lint changed files vs default branch
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main

          # Optional: exclude README from checks
          FILTER_REGEX_INCLUDE: .*
          FILTER_REGEX_EXCLUDE: README\.md

          # Post per-linter commit statuses (now allowed by permissions above)
          USE_GITHUB_STATUS_API: true

          # ✅ Enable Python-focused checks
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_PYTHON_MYPY:  true
          VALIDATE_PYTHON_RUFF:  true
          # If you use formatters in CI, flip these to true
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_ISORT: false

          # 🧯 Disable noisy/unneeded tools for now (re-enable later if desired)
          VALIDATE_CHECKOV: false                 # IaC security (Terraform/Cloud)
          VALIDATE_GITHUB_ACTIONS_ZIZMOR: false   # GH Actions security
          VALIDATE_TRIVY: false                   # Container/IaC vuln scanner
          VALIDATE_PRE_COMMIT: false              # Requires a configured .pre-commit-config.yaml
          VALIDATE_JSCPD: false                   # Copy/paste detector
          VALIDATE_BIOME_FORMAT: false
          VALIDATE_BIOME_LINT: false

          # Point mypy at the generated config (fixes earlier fatal error)
          PYTHON_MYPY_LINTER_RULES: mypy.ini
